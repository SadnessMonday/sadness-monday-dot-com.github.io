### YamlMime:ManagedReference
items:
- uid: SadnessMonday.NomadsRuntime.Nomads
  commentId: T:SadnessMonday.NomadsRuntime.Nomads
  id: Nomads
  parent: SadnessMonday.NomadsRuntime
  children:
  - SadnessMonday.NomadsRuntime.Nomads.GetAll``1
  - SadnessMonday.NomadsRuntime.Nomads.GetAll``1(System.String)
  - SadnessMonday.NomadsRuntime.Nomads.GetIfInitialized``1(``0@)
  - SadnessMonday.NomadsRuntime.Nomads.GetNomadCount``1
  - SadnessMonday.NomadsRuntime.Nomads.Get``1
  - SadnessMonday.NomadsRuntime.Nomads.Get``1(System.String)
  - SadnessMonday.NomadsRuntime.Nomads.NomadExists``1
  - SadnessMonday.NomadsRuntime.Nomads.Reset``1
  - SadnessMonday.NomadsRuntime.Nomads.Reset``1(``0)
  langs:
  - csharp
  - vb
  name: Nomads
  nameWithType: Nomads
  fullName: SadnessMonday.NomadsRuntime.Nomads
  type: Class
  source:
    remote:
      path: Assets/Nomads/Runtime/NomadsRuntime/Nomads.cs
      branch: main
      repo: git@github.com:SadnessMonday/nomadic-singletons.git
    id: Nomads
    path: ../Assets/Nomads/Runtime/NomadsRuntime/Nomads.cs
    startLine: 6
  assemblies:
  - Nomads Runtime
  namespace: SadnessMonday.NomadsRuntime
  summary: Nomads is a static class which is the main entry point for interacting with Nomads.
  example: []
  syntax:
    content: public static class Nomads
    content.vb: Public Module Nomads
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: SadnessMonday.NomadsRuntime.Nomads.GetAll``1
  commentId: M:SadnessMonday.NomadsRuntime.Nomads.GetAll``1
  id: GetAll``1
  parent: SadnessMonday.NomadsRuntime.Nomads
  langs:
  - csharp
  - vb
  name: GetAll<T>()
  nameWithType: Nomads.GetAll<T>()
  fullName: SadnessMonday.NomadsRuntime.Nomads.GetAll<T>()
  type: Method
  source:
    remote:
      path: Assets/Nomads/Runtime/NomadsRuntime/Nomads.cs
      branch: main
      repo: git@github.com:SadnessMonday/nomadic-singletons.git
    id: GetAll
    path: ../Assets/Nomads/Runtime/NomadsRuntime/Nomads.cs
    startLine: 14
  assemblies:
  - Nomads Runtime
  namespace: SadnessMonday.NomadsRuntime
  summary: Get All nomads of the given type.
  example: []
  syntax:
    content: public static IReadOnlyList<T> GetAll<T>()
    typeParameters:
    - id: T
      description: The type of the desired nomad instances
    return:
      type: System.Collections.Generic.IReadOnlyList{{T}}
      description: A collection of nomad instances of the given type
    content.vb: Public Shared Function GetAll(Of T)() As IReadOnlyList(Of T)
  overload: SadnessMonday.NomadsRuntime.Nomads.GetAll*
  nameWithType.vb: Nomads.GetAll(Of T)()
  fullName.vb: SadnessMonday.NomadsRuntime.Nomads.GetAll(Of T)()
  name.vb: GetAll(Of T)()
- uid: SadnessMonday.NomadsRuntime.Nomads.GetAll``1(System.String)
  commentId: M:SadnessMonday.NomadsRuntime.Nomads.GetAll``1(System.String)
  id: GetAll``1(System.String)
  parent: SadnessMonday.NomadsRuntime.Nomads
  langs:
  - csharp
  - vb
  name: GetAll<T>(string)
  nameWithType: Nomads.GetAll<T>(string)
  fullName: SadnessMonday.NomadsRuntime.Nomads.GetAll<T>(string)
  type: Method
  source:
    remote:
      path: Assets/Nomads/Runtime/NomadsRuntime/Nomads.cs
      branch: main
      repo: git@github.com:SadnessMonday/nomadic-singletons.git
    id: GetAll
    path: ../Assets/Nomads/Runtime/NomadsRuntime/Nomads.cs
    startLine: 24
  assemblies:
  - Nomads Runtime
  namespace: SadnessMonday.NomadsRuntime
  summary: Get all nomads of the given type with the given ID.
  example: []
  syntax:
    content: public static IReadOnlyList<T> GetAll<T>(string id)
    parameters:
    - id: id
      type: System.String
      description: ''
    typeParameters:
    - id: T
      description: The type of the desired nomad instances
    return:
      type: System.Collections.Generic.IReadOnlyList{{T}}
      description: A collection of nomad instances of the given type
    content.vb: Public Shared Function GetAll(Of T)(id As String) As IReadOnlyList(Of T)
  overload: SadnessMonday.NomadsRuntime.Nomads.GetAll*
  nameWithType.vb: Nomads.GetAll(Of T)(String)
  fullName.vb: SadnessMonday.NomadsRuntime.Nomads.GetAll(Of T)(String)
  name.vb: GetAll(Of T)(String)
- uid: SadnessMonday.NomadsRuntime.Nomads.Get``1
  commentId: M:SadnessMonday.NomadsRuntime.Nomads.Get``1
  id: Get``1
  parent: SadnessMonday.NomadsRuntime.Nomads
  langs:
  - csharp
  - vb
  name: Get<T>()
  nameWithType: Nomads.Get<T>()
  fullName: SadnessMonday.NomadsRuntime.Nomads.Get<T>()
  type: Method
  source:
    remote:
      path: Assets/Nomads/Runtime/NomadsRuntime/Nomads.cs
      branch: main
      repo: git@github.com:SadnessMonday/nomadic-singletons.git
    id: Get
    path: ../Assets/Nomads/Runtime/NomadsRuntime/Nomads.cs
    startLine: 36
  assemblies:
  - Nomads Runtime
  namespace: SadnessMonday.NomadsRuntime
  summary: Get a nomad instance of the given type.
  example: []
  syntax:
    content: public static T Get<T>()
    typeParameters:
    - id: T
      description: The type of the desired nomad instance
    return:
      type: '{T}'
      description: A nomad instance of the given type
    content.vb: Public Shared Function [Get](Of T)() As T
  overload: SadnessMonday.NomadsRuntime.Nomads.Get*
  exceptions:
  - type: SadnessMonday.NomadsRuntime.MultipleNomadsException
    commentId: T:SadnessMonday.NomadsRuntime.MultipleNomadsException
    description: Thrown if there are multiple nomads of the given type.
  nameWithType.vb: Nomads.Get(Of T)()
  fullName.vb: SadnessMonday.NomadsRuntime.Nomads.Get(Of T)()
  name.vb: Get(Of T)()
- uid: SadnessMonday.NomadsRuntime.Nomads.Get``1(System.String)
  commentId: M:SadnessMonday.NomadsRuntime.Nomads.Get``1(System.String)
  id: Get``1(System.String)
  parent: SadnessMonday.NomadsRuntime.Nomads
  langs:
  - csharp
  - vb
  name: Get<T>(string)
  nameWithType: Nomads.Get<T>(string)
  fullName: SadnessMonday.NomadsRuntime.Nomads.Get<T>(string)
  type: Method
  source:
    remote:
      path: Assets/Nomads/Runtime/NomadsRuntime/Nomads.cs
      branch: main
      repo: git@github.com:SadnessMonday/nomadic-singletons.git
    id: Get
    path: ../Assets/Nomads/Runtime/NomadsRuntime/Nomads.cs
    startLine: 48
  assemblies:
  - Nomads Runtime
  namespace: SadnessMonday.NomadsRuntime
  summary: Get a nomad instance of the given type with the given ID.
  example: []
  syntax:
    content: public static T Get<T>(string id)
    parameters:
    - id: id
      type: System.String
    typeParameters:
    - id: T
      description: The type of the desired nomad instance
    return:
      type: '{T}'
      description: A nomad instance of the given type
    content.vb: Public Shared Function [Get](Of T)(id As String) As T
  overload: SadnessMonday.NomadsRuntime.Nomads.Get*
  exceptions:
  - type: SadnessMonday.NomadsRuntime.MultipleNomadsException
    commentId: T:SadnessMonday.NomadsRuntime.MultipleNomadsException
    description: Thrown if there are multiple nomads of the given type with the given ID.
  nameWithType.vb: Nomads.Get(Of T)(String)
  fullName.vb: SadnessMonday.NomadsRuntime.Nomads.Get(Of T)(String)
  name.vb: Get(Of T)(String)
- uid: SadnessMonday.NomadsRuntime.Nomads.GetIfInitialized``1(``0@)
  commentId: M:SadnessMonday.NomadsRuntime.Nomads.GetIfInitialized``1(``0@)
  id: GetIfInitialized``1(``0@)
  parent: SadnessMonday.NomadsRuntime.Nomads
  langs:
  - csharp
  - vb
  name: GetIfInitialized<T>(out T)
  nameWithType: Nomads.GetIfInitialized<T>(out T)
  fullName: SadnessMonday.NomadsRuntime.Nomads.GetIfInitialized<T>(out T)
  type: Method
  source:
    remote:
      path: Assets/Nomads/Runtime/NomadsRuntime/Nomads.cs
      branch: main
      repo: git@github.com:SadnessMonday/nomadic-singletons.git
    id: GetIfInitialized
    path: ../Assets/Nomads/Runtime/NomadsRuntime/Nomads.cs
    startLine: 58
  assemblies:
  - Nomads Runtime
  namespace: SadnessMonday.NomadsRuntime
  summary: Get a nomad instance, but only if it has been previously instantiated.
  example: []
  syntax:
    content: public static bool GetIfInitialized<T>(out T instance)
    parameters:
    - id: instance
      type: '{T}'
      description: A nomad instance of the given type, if it was previously initialized
    typeParameters:
    - id: T
      description: The type of the desired nomad instance
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the nomad instance was already instantiated
    content.vb: Public Shared Function GetIfInitialized(Of T)(instance As T) As Boolean
  overload: SadnessMonday.NomadsRuntime.Nomads.GetIfInitialized*
  nameWithType.vb: Nomads.GetIfInitialized(Of T)(T)
  fullName.vb: SadnessMonday.NomadsRuntime.Nomads.GetIfInitialized(Of T)(T)
  name.vb: GetIfInitialized(Of T)(T)
- uid: SadnessMonday.NomadsRuntime.Nomads.GetNomadCount``1
  commentId: M:SadnessMonday.NomadsRuntime.Nomads.GetNomadCount``1
  id: GetNomadCount``1
  parent: SadnessMonday.NomadsRuntime.Nomads
  langs:
  - csharp
  - vb
  name: GetNomadCount<T>()
  nameWithType: Nomads.GetNomadCount<T>()
  fullName: SadnessMonday.NomadsRuntime.Nomads.GetNomadCount<T>()
  type: Method
  source:
    remote:
      path: Assets/Nomads/Runtime/NomadsRuntime/Nomads.cs
      branch: main
      repo: git@github.com:SadnessMonday/nomadic-singletons.git
    id: GetNomadCount
    path: ../Assets/Nomads/Runtime/NomadsRuntime/Nomads.cs
    startLine: 67
  assemblies:
  - Nomads Runtime
  namespace: SadnessMonday.NomadsRuntime
  summary: Returns the number of nomads that exist of the given type.
  example: []
  syntax:
    content: public static int GetNomadCount<T>()
    typeParameters:
    - id: T
      description: The type to get the count for
    return:
      type: System.Int32
      description: The number of nomads that exist of the given type.
    content.vb: Public Shared Function GetNomadCount(Of T)() As Integer
  overload: SadnessMonday.NomadsRuntime.Nomads.GetNomadCount*
  nameWithType.vb: Nomads.GetNomadCount(Of T)()
  fullName.vb: SadnessMonday.NomadsRuntime.Nomads.GetNomadCount(Of T)()
  name.vb: GetNomadCount(Of T)()
- uid: SadnessMonday.NomadsRuntime.Nomads.NomadExists``1
  commentId: M:SadnessMonday.NomadsRuntime.Nomads.NomadExists``1
  id: NomadExists``1
  parent: SadnessMonday.NomadsRuntime.Nomads
  langs:
  - csharp
  - vb
  name: NomadExists<T>()
  nameWithType: Nomads.NomadExists<T>()
  fullName: SadnessMonday.NomadsRuntime.Nomads.NomadExists<T>()
  type: Method
  source:
    remote:
      path: Assets/Nomads/Runtime/NomadsRuntime/Nomads.cs
      branch: main
      repo: git@github.com:SadnessMonday/nomadic-singletons.git
    id: NomadExists
    path: ../Assets/Nomads/Runtime/NomadsRuntime/Nomads.cs
    startLine: 77
  assemblies:
  - Nomads Runtime
  namespace: SadnessMonday.NomadsRuntime
  summary: Determine whether a nomad of the given type is registered with Nomads.
  example: []
  syntax:
    content: public static bool NomadExists<T>()
    typeParameters:
    - id: T
      description: The desired nomad type
    return:
      type: System.Boolean
      description: true if there is a nomad prefab in existence with the given type.
    content.vb: Public Shared Function NomadExists(Of T)() As Boolean
  overload: SadnessMonday.NomadsRuntime.Nomads.NomadExists*
  nameWithType.vb: Nomads.NomadExists(Of T)()
  fullName.vb: SadnessMonday.NomadsRuntime.Nomads.NomadExists(Of T)()
  name.vb: NomadExists(Of T)()
- uid: SadnessMonday.NomadsRuntime.Nomads.Reset``1
  commentId: M:SadnessMonday.NomadsRuntime.Nomads.Reset``1
  id: Reset``1
  parent: SadnessMonday.NomadsRuntime.Nomads
  langs:
  - csharp
  - vb
  name: Reset<T>()
  nameWithType: Nomads.Reset<T>()
  fullName: SadnessMonday.NomadsRuntime.Nomads.Reset<T>()
  type: Method
  source:
    remote:
      path: Assets/Nomads/Runtime/NomadsRuntime/Nomads.cs
      branch: main
      repo: git@github.com:SadnessMonday/nomadic-singletons.git
    id: Reset
    path: ../Assets/Nomads/Runtime/NomadsRuntime/Nomads.cs
    startLine: 85
  assemblies:
  - Nomads Runtime
  namespace: SadnessMonday.NomadsRuntime
  summary: Destroys the Nomad instance for the given type
  example: []
  syntax:
    content: public static void Reset<T>()
    typeParameters:
    - id: T
      description: The type of nomad instance to destroy
    content.vb: Public Shared Sub Reset(Of T)()
  overload: SadnessMonday.NomadsRuntime.Nomads.Reset*
  nameWithType.vb: Nomads.Reset(Of T)()
  fullName.vb: SadnessMonday.NomadsRuntime.Nomads.Reset(Of T)()
  name.vb: Reset(Of T)()
- uid: SadnessMonday.NomadsRuntime.Nomads.Reset``1(``0)
  commentId: M:SadnessMonday.NomadsRuntime.Nomads.Reset``1(``0)
  id: Reset``1(``0)
  parent: SadnessMonday.NomadsRuntime.Nomads
  langs:
  - csharp
  - vb
  name: Reset<T>(T)
  nameWithType: Nomads.Reset<T>(T)
  fullName: SadnessMonday.NomadsRuntime.Nomads.Reset<T>(T)
  type: Method
  source:
    remote:
      path: Assets/Nomads/Runtime/NomadsRuntime/Nomads.cs
      branch: main
      repo: git@github.com:SadnessMonday/nomadic-singletons.git
    id: Reset
    path: ../Assets/Nomads/Runtime/NomadsRuntime/Nomads.cs
    startLine: 94
  assemblies:
  - Nomads Runtime
  namespace: SadnessMonday.NomadsRuntime
  summary: Destroys the provided nomad instance.
  example: []
  syntax:
    content: public static void Reset<T>(T component)
    parameters:
    - id: component
      type: '{T}'
      description: A component on the nomad instance that should be destroyed
    typeParameters:
    - id: T
      description: The type of nomad instance to destroy
    content.vb: Public Shared Sub Reset(Of T)(component As T)
  overload: SadnessMonday.NomadsRuntime.Nomads.Reset*
  nameWithType.vb: Nomads.Reset(Of T)(T)
  fullName.vb: SadnessMonday.NomadsRuntime.Nomads.Reset(Of T)(T)
  name.vb: Reset(Of T)(T)
references:
- uid: SadnessMonday.NomadsRuntime
  commentId: N:SadnessMonday.NomadsRuntime
  href: SadnessMonday.html
  name: SadnessMonday.NomadsRuntime
  nameWithType: SadnessMonday.NomadsRuntime
  fullName: SadnessMonday.NomadsRuntime
  spec.csharp:
  - uid: SadnessMonday
    name: SadnessMonday
    href: SadnessMonday.html
  - name: .
  - uid: SadnessMonday.NomadsRuntime
    name: NomadsRuntime
    href: SadnessMonday.NomadsRuntime.html
  spec.vb:
  - uid: SadnessMonday
    name: SadnessMonday
    href: SadnessMonday.html
  - name: .
  - uid: SadnessMonday.NomadsRuntime
    name: NomadsRuntime
    href: SadnessMonday.NomadsRuntime.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SadnessMonday.NomadsRuntime.Nomads.GetAll*
  commentId: Overload:SadnessMonday.NomadsRuntime.Nomads.GetAll
  href: SadnessMonday.NomadsRuntime.Nomads.html#SadnessMonday_NomadsRuntime_Nomads_GetAll__1
  name: GetAll
  nameWithType: Nomads.GetAll
  fullName: SadnessMonday.NomadsRuntime.Nomads.GetAll
- uid: System.Collections.Generic.IReadOnlyList{{T}}
  commentId: T:System.Collections.Generic.IReadOnlyList{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SadnessMonday.NomadsRuntime.MultipleNomadsException
  commentId: T:SadnessMonday.NomadsRuntime.MultipleNomadsException
  href: SadnessMonday.NomadsRuntime.MultipleNomadsException.html
  name: MultipleNomadsException
  nameWithType: MultipleNomadsException
  fullName: SadnessMonday.NomadsRuntime.MultipleNomadsException
- uid: SadnessMonday.NomadsRuntime.Nomads.Get*
  commentId: Overload:SadnessMonday.NomadsRuntime.Nomads.Get
  href: SadnessMonday.NomadsRuntime.Nomads.html#SadnessMonday_NomadsRuntime_Nomads_Get__1
  name: Get
  nameWithType: Nomads.Get
  fullName: SadnessMonday.NomadsRuntime.Nomads.Get
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: SadnessMonday.NomadsRuntime.Nomads.GetIfInitialized*
  commentId: Overload:SadnessMonday.NomadsRuntime.Nomads.GetIfInitialized
  href: SadnessMonday.NomadsRuntime.Nomads.html#SadnessMonday_NomadsRuntime_Nomads_GetIfInitialized__1___0__
  name: GetIfInitialized
  nameWithType: Nomads.GetIfInitialized
  fullName: SadnessMonday.NomadsRuntime.Nomads.GetIfInitialized
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SadnessMonday.NomadsRuntime.Nomads.GetNomadCount*
  commentId: Overload:SadnessMonday.NomadsRuntime.Nomads.GetNomadCount
  href: SadnessMonday.NomadsRuntime.Nomads.html#SadnessMonday_NomadsRuntime_Nomads_GetNomadCount__1
  name: GetNomadCount
  nameWithType: Nomads.GetNomadCount
  fullName: SadnessMonday.NomadsRuntime.Nomads.GetNomadCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SadnessMonday.NomadsRuntime.Nomads.NomadExists*
  commentId: Overload:SadnessMonday.NomadsRuntime.Nomads.NomadExists
  href: SadnessMonday.NomadsRuntime.Nomads.html#SadnessMonday_NomadsRuntime_Nomads_NomadExists__1
  name: NomadExists
  nameWithType: Nomads.NomadExists
  fullName: SadnessMonday.NomadsRuntime.Nomads.NomadExists
- uid: SadnessMonday.NomadsRuntime.Nomads.Reset*
  commentId: Overload:SadnessMonday.NomadsRuntime.Nomads.Reset
  href: SadnessMonday.NomadsRuntime.Nomads.html#SadnessMonday_NomadsRuntime_Nomads_Reset__1
  name: Reset
  nameWithType: Nomads.Reset
  fullName: SadnessMonday.NomadsRuntime.Nomads.Reset
